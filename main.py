# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\pyqt5_designer\AnJ-lyzer.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import os
import pickle

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 880)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 880))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(1000, 840))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.main_horizontalLayout = QtWidgets.QHBoxLayout()
        self.main_horizontalLayout.setSpacing(3)
        self.main_horizontalLayout.setObjectName("main_horizontalLayout")
        self.left_verticalLayout = QtWidgets.QVBoxLayout()
        self.left_verticalLayout.setContentsMargins(3, 3, 3, 3)
        self.left_verticalLayout.setSpacing(3)
        self.left_verticalLayout.setObjectName("left_verticalLayout")
        self.info_groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.info_groupBox.setMaximumSize(QtCore.QSize(16777215, 151))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.info_groupBox.setFont(font)
        self.info_groupBox.setObjectName("info_groupBox")
        self.saveProject_pushButton = QtWidgets.QPushButton(self.info_groupBox)
        self.saveProject_pushButton.clicked.connect(self.save_project)
        self.saveProject_pushButton.clicked.connect(self.save_test_project)
        self.saveProject_pushButton.setGeometry(QtCore.QRect(440, 80, 75, 25))
        self.saveProject_pushButton.setObjectName("saveProject_pushButton")
        self.saveAsProject_pushButton = QtWidgets.QPushButton(self.info_groupBox)
        self.saveAsProject_pushButton.clicked.connect(self.save_project_as)
        self.saveAsProject_pushButton.setGeometry(QtCore.QRect(440, 110, 75, 25))
        self.saveAsProject_pushButton.setObjectName("saveAsProject_pushButton")
        self.projectName_lineEdit = QtWidgets.QLineEdit(self.info_groupBox)
        self.projectName_lineEdit.setGeometry(QtCore.QRect(80, 20, 270, 30))
        self.projectName_lineEdit.setObjectName("projectName_lineEdit")
        self.project_label = QtWidgets.QLabel(self.info_groupBox)
        self.project_label.setGeometry(QtCore.QRect(20, 20, 51, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.project_label.setFont(font)
        self.project_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.project_label.setObjectName("project_label")
        self.openProject_pushButton = QtWidgets.QPushButton(self.info_groupBox)
        self.openProject_pushButton.clicked.connect(self.open_project)
        self.openProject_pushButton.setGeometry(QtCore.QRect(440, 50, 75, 25))
        self.openProject_pushButton.setObjectName("openProject_pushButton")
        self.newProject_pushButton = QtWidgets.QPushButton(self.info_groupBox)
        self.newProject_pushButton.clicked.connect(self.new_project)
        self.newProject_pushButton.setGeometry(QtCore.QRect(440, 20, 75, 25))
        self.newProject_pushButton.setObjectName("newProject_pushButton")
        self.file_label = QtWidgets.QLabel(self.info_groupBox)
        self.file_label.setGeometry(QtCore.QRect(20, 60, 41, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.file_label.setFont(font)
        self.file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.file_label.setObjectName("file_label")
        self.fileName_textBrowser = QtWidgets.QTextBrowser(self.info_groupBox)
        self.fileName_textBrowser.setGeometry(QtCore.QRect(80, 60, 271, 30))
        self.fileName_textBrowser.setObjectName("fileName_textBrowser")
        self.fileSize_textBrowser = QtWidgets.QTextBrowser(self.info_groupBox)
        self.fileSize_textBrowser.setGeometry(QtCore.QRect(360, 60, 70, 30))
        self.fileSize_textBrowser.setObjectName("fileSize_textBrowser")
        self.projectSize_textBrowser = QtWidgets.QTextBrowser(self.info_groupBox)
        self.projectSize_textBrowser.setGeometry(QtCore.QRect(360, 20, 70, 30))
        self.projectSize_textBrowser.setObjectName("projectSize_textBrowser")
        self.left_verticalLayout.addWidget(self.info_groupBox)
        self.operations_tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.operations_tabWidget.setMaximumSize(QtCore.QSize(16777215, 302))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.operations_tabWidget.setFont(font)
        self.operations_tabWidget.setUsesScrollButtons(False)
        self.operations_tabWidget.setDocumentMode(False)
        self.operations_tabWidget.setTabsClosable(False)
        self.operations_tabWidget.setMovable(False)
        self.operations_tabWidget.setTabBarAutoHide(False)
        self.operations_tabWidget.setObjectName("operations_tabWidget")
        self.importOptions_tab = QtWidgets.QWidget()
        self.importOptions_tab.setObjectName("importOptions_tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.importOptions_tab)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.importOptions_verticalLayout = QtWidgets.QVBoxLayout()
        self.importOptions_verticalLayout.setSpacing(0)
        self.importOptions_verticalLayout.setObjectName("importOptions_verticalLayout")
        self.importOptionsUp_widget = QtWidgets.QWidget(self.importOptions_tab)
        self.importOptionsUp_widget.setObjectName("importOptionsUp_widget")
        self.loadPreload_pushButton = QtWidgets.QPushButton(self.importOptionsUp_widget)
        self.loadPreload_pushButton.clicked.connect(self.load_preload)
        self.loadPreload_pushButton.setGeometry(QtCore.QRect(315, 10, 95, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.loadPreload_pushButton.setFont(font)
        self.loadPreload_pushButton.setObjectName("loadPreload_pushButton")
        self.reloadData_pushButton = QtWidgets.QPushButton(self.importOptionsUp_widget)
        self.reloadData_pushButton.setGeometry(QtCore.QRect(205, 10, 95, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.reloadData_pushButton.setFont(font)
        self.reloadData_pushButton.setObjectName("reloadData_pushButton")
        self.savePreload_pushButton = QtWidgets.QPushButton(self.importOptionsUp_widget)
        self.savePreload_pushButton.clicked.connect(self.save_preload)
        self.savePreload_pushButton.setGeometry(QtCore.QRect(415, 10, 95, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.savePreload_pushButton.setFont(font)
        self.savePreload_pushButton.setObjectName("savePreload_pushButton")
        self.importRawData_pushButton = QtWidgets.QPushButton(self.importOptionsUp_widget)
        self.importRawData_pushButton.clicked.connect(self.import_raw_data)
        self.importRawData_pushButton.setGeometry(QtCore.QRect(5, 10, 95, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.importRawData_pushButton.setFont(font)
        self.importRawData_pushButton.setObjectName("importRawData_pushButton")
        self.previewHeader_pushButton = QtWidgets.QPushButton(self.importOptionsUp_widget)
        self.previewHeader_pushButton.setGeometry(QtCore.QRect(105, 10, 95, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.previewHeader_pushButton.setFont(font)
        self.previewHeader_pushButton.setObjectName("previewHeader_pushButton")
        self.importOptions_verticalLayout.addWidget(self.importOptionsUp_widget)
        self.importOptions_horizontalLayout = QtWidgets.QHBoxLayout()
        self.importOptions_horizontalLayout.setObjectName("importOptions_horizontalLayout")
        self.importOptionsDown_widget = QtWidgets.QWidget(self.importOptions_tab)
        self.importOptionsDown_widget.setObjectName("importOptionsDown_widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.importOptionsDown_widget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.importOptionsDown_horizontalLayout = QtWidgets.QHBoxLayout()
        self.importOptionsDown_horizontalLayout.setSpacing(0)
        self.importOptionsDown_horizontalLayout.setObjectName("importOptionsDown_horizontalLayout")
        self.widget = QtWidgets.QWidget(self.importOptionsDown_widget)
        self.widget.setMaximumSize(QtCore.QSize(328, 16777215))
        self.widget.setObjectName("widget")
        self.addHeader_textEdit = QtWidgets.QTextEdit(self.widget)
        self.addHeader_textEdit.setGeometry(QtCore.QRect(110, 170, 211, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.addHeader_textEdit.setFont(font)
        self.addHeader_textEdit.setObjectName("addHeader_textEdit")
        self.skipNRows_textEdit = QtWidgets.QTextEdit(self.widget)
        self.skipNRows_textEdit.setGeometry(QtCore.QRect(110, 50, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.skipNRows_textEdit.setFont(font)
        self.skipNRows_textEdit.setObjectName("skipNRows_textEdit")
        self.rowDefinedIn_file_label = QtWidgets.QLabel(self.widget)
        self.rowDefinedIn_file_label.setGeometry(QtCore.QRect(110, 130, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rowDefinedIn_file_label.setFont(font)
        self.rowDefinedIn_file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.rowDefinedIn_file_label.setObjectName("rowDefinedIn_file_label")
        self.rowDefinedIn_textEdit = QtWidgets.QTextEdit(self.widget)
        self.rowDefinedIn_textEdit.setGeometry(QtCore.QRect(159, 130, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rowDefinedIn_textEdit.setFont(font)
        self.rowDefinedIn_textEdit.setObjectName("rowDefinedIn_textEdit")
        self.delimiter_file_label = QtWidgets.QLabel(self.widget)
        self.delimiter_file_label.setGeometry(QtCore.QRect(175, 10, 70, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.delimiter_file_label.setFont(font)
        self.delimiter_file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.delimiter_file_label.setObjectName("delimiter_file_label")
        self.addHeader_checkBox = QtWidgets.QCheckBox(self.widget)
        self.addHeader_checkBox.setGeometry(QtCore.QRect(10, 170, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.addHeader_checkBox.setFont(font)
        self.addHeader_checkBox.setObjectName("addHeader_checkBox")
        self.columnDefinedIn_file_label = QtWidgets.QLabel(self.widget)
        self.columnDefinedIn_file_label.setGeometry(QtCore.QRect(220, 130, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.columnDefinedIn_file_label.setFont(font)
        self.columnDefinedIn_file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.columnDefinedIn_file_label.setObjectName("columnDefinedIn_file_label")
        self.delimiter_comboBox = QtWidgets.QComboBox(self.widget)
        self.delimiter_comboBox.setGeometry(QtCore.QRect(240, 10, 80, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.delimiter_comboBox.setFont(font)
        self.delimiter_comboBox.setEditable(True)
        self.delimiter_comboBox.setObjectName("delimiter_comboBox")
        self.delimiter_comboBox.addItem("")
        self.delimiter_comboBox.addItem("")
        self.delimiter_comboBox.addItem("")
        self.delimiter_comboBox.addItem("")
        self.delimiter_comboBox.addItem("")
        self.skipNRows_checkBox = QtWidgets.QCheckBox(self.widget)
        self.skipNRows_checkBox.setGeometry(QtCore.QRect(10, 50, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.skipNRows_checkBox.setFont(font)
        self.skipNRows_checkBox.setObjectName("skipNRows_checkBox")
        self.decimalSeparator_file_label = QtWidgets.QLabel(self.widget)
        self.decimalSeparator_file_label.setGeometry(QtCore.QRect(175, 50, 120, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.decimalSeparator_file_label.setFont(font)
        self.decimalSeparator_file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.decimalSeparator_file_label.setObjectName("decimalSeparator_file_label")
        self.findHeader_checkBox = QtWidgets.QCheckBox(self.widget)
        self.findHeader_checkBox.setGeometry(QtCore.QRect(10, 90, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.findHeader_checkBox.setFont(font)
        self.findHeader_checkBox.setObjectName("findHeader_checkBox")
        self.definedIn_checkBox = QtWidgets.QCheckBox(self.widget)
        self.definedIn_checkBox.setGeometry(QtCore.QRect(10, 130, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.definedIn_checkBox.setFont(font)
        self.definedIn_checkBox.setObjectName("definedIn_checkBox")
        self.columnDefinedIn_textEdit = QtWidgets.QTextEdit(self.widget)
        self.columnDefinedIn_textEdit.setGeometry(QtCore.QRect(270, 130, 50, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.columnDefinedIn_textEdit.setFont(font)
        self.columnDefinedIn_textEdit.setObjectName("columnDefinedIn_textEdit")
        self.decimalSeparator_textEdit = QtWidgets.QTextEdit(self.widget)
        self.decimalSeparator_textEdit.setGeometry(QtCore.QRect(290, 50, 30, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.decimalSeparator_textEdit.setFont(font)
        self.decimalSeparator_textEdit.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.decimalSeparator_textEdit.setObjectName("decimalSeparator_textEdit")
        self.findHeader_textEdit = QtWidgets.QTextEdit(self.widget)
        self.findHeader_textEdit.setGeometry(QtCore.QRect(110, 90, 210, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.findHeader_textEdit.setFont(font)
        self.findHeader_textEdit.setObjectName("findHeader_textEdit")
        self.reloadAutomatically_checkBox = QtWidgets.QCheckBox(self.widget)
        self.reloadAutomatically_checkBox.setGeometry(QtCore.QRect(10, 10, 151, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.reloadAutomatically_checkBox.setFont(font)
        self.reloadAutomatically_checkBox.setObjectName("reloadAutomatically_checkBox")
        self.importOptionsDown_horizontalLayout.addWidget(self.widget)
        self.importOptionsDownRight_verticalLayout = QtWidgets.QVBoxLayout()
        self.importOptionsDownRight_verticalLayout.setSpacing(0)
        self.importOptionsDownRight_verticalLayout.setObjectName("importOptionsDownRight_verticalLayout")
        self.variables_widget = QtWidgets.QWidget(self.importOptionsDown_widget)
        self.variables_widget.setMaximumSize(QtCore.QSize(16777215, 50))
        self.variables_widget.setObjectName("variables_widget")
        self.removeVariables_pushButton_2 = QtWidgets.QPushButton(self.variables_widget)
        self.removeVariables_pushButton_2.setGeometry(QtCore.QRect(135, 10, 45, 30))
        self.removeVariables_pushButton_2.setObjectName("removeVariables_pushButton_2")
        self.variables_file_label = QtWidgets.QLabel(self.variables_widget)
        self.variables_file_label.setGeometry(QtCore.QRect(10, 10, 70, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.variables_file_label.setFont(font)
        self.variables_file_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.variables_file_label.setObjectName("variables_file_label")
        self.OkVariables_pushButton = QtWidgets.QPushButton(self.variables_widget)
        self.OkVariables_pushButton.setGeometry(QtCore.QRect(85, 10, 45, 30))
        self.OkVariables_pushButton.setObjectName("OkVariables_pushButton")
        self.importOptionsDownRight_verticalLayout.addWidget(self.variables_widget)
        self.variables_listWidget = QtWidgets.QListWidget(self.importOptionsDown_widget)
        self.variables_listWidget.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.variables_listWidget.setObjectName("variables_listWidget")
        self.importOptionsDownRight_verticalLayout.addWidget(self.variables_listWidget)
        self.importOptionsDownRight_verticalLayout.setStretch(0, 1)
        self.importOptionsDownRight_verticalLayout.setStretch(1, 3)
        self.importOptionsDown_horizontalLayout.addLayout(self.importOptionsDownRight_verticalLayout)
        self.importOptionsDown_horizontalLayout.setStretch(0, 7)
        self.importOptionsDown_horizontalLayout.setStretch(1, 4)
        self.gridLayout_2.addLayout(self.importOptionsDown_horizontalLayout, 0, 0, 1, 1)
        self.importOptions_horizontalLayout.addWidget(self.importOptionsDown_widget)
        self.importOptions_verticalLayout.addLayout(self.importOptions_horizontalLayout)
        self.importOptions_verticalLayout.setStretch(0, 1)
        self.importOptions_verticalLayout.setStretch(1, 4)
        self.verticalLayout_2.addLayout(self.importOptions_verticalLayout)
        self.operations_tabWidget.addTab(self.importOptions_tab, "")
        self.operations_tab = QtWidgets.QWidget()
        self.operations_tab.setObjectName("operations_tab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.operations_tab)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.operationsTab_horizontalLayout = QtWidgets.QHBoxLayout()
        self.operationsTab_horizontalLayout.setSpacing(0)
        self.operationsTab_horizontalLayout.setObjectName("operationsTab_horizontalLayout")
        self.operationsButtons_widget = QtWidgets.QWidget(self.operations_tab)
        self.operationsButtons_widget.setMaximumSize(QtCore.QSize(110, 16777215))
        self.operationsButtons_widget.setObjectName("operationsButtons_widget")
        self.addOperation_pushButton = QtWidgets.QPushButton(self.operationsButtons_widget)
        self.addOperation_pushButton.setGeometry(QtCore.QRect(10, 10, 90, 40))
        self.addOperation_pushButton.setObjectName("addOperation_pushButton")
        self.goSelected_pushButton = QtWidgets.QPushButton(self.operationsButtons_widget)
        self.goSelected_pushButton.setGeometry(QtCore.QRect(10, 55, 90, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.goSelected_pushButton.setFont(font)
        self.goSelected_pushButton.setObjectName("goSelected_pushButton")
        self.goMarked_pushButton = QtWidgets.QPushButton(self.operationsButtons_widget)
        self.goMarked_pushButton.setGeometry(QtCore.QRect(10, 100, 90, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.goMarked_pushButton.setFont(font)
        self.goMarked_pushButton.setObjectName("goMarked_pushButton")
        self.operationsTab_horizontalLayout.addWidget(self.operationsButtons_widget)
        self.operations_frame = QtWidgets.QFrame(self.operations_tab)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.operations_frame.setFont(font)
        self.operations_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.operations_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.operations_frame.setObjectName("operations_frame")
        self.operationsTab_horizontalLayout.addWidget(self.operations_frame)
        self.operationsTab_horizontalLayout.setStretch(0, 1)
        self.operationsTab_horizontalLayout.setStretch(1, 3)
        self.gridLayout_3.addLayout(self.operationsTab_horizontalLayout, 0, 0, 1, 1)
        self.operations_tabWidget.addTab(self.operations_tab, "")
        self.left_verticalLayout.addWidget(self.operations_tabWidget)
        self.plotting_tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.plotting_tabWidget.setMaximumSize(QtCore.QSize(16777215, 151))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotting_tabWidget.setFont(font)
        self.plotting_tabWidget.setUsesScrollButtons(False)
        self.plotting_tabWidget.setDocumentMode(False)
        self.plotting_tabWidget.setTabsClosable(False)
        self.plotting_tabWidget.setMovable(False)
        self.plotting_tabWidget.setTabBarAutoHide(False)
        self.plotting_tabWidget.setObjectName("plotting_tabWidget")
        self.plot2DXY_tab = QtWidgets.QWidget()
        self.plot2DXY_tab.setObjectName("plot2DXY_tab")
        self.plotMarked2DXY_pushButton = QtWidgets.QPushButton(self.plot2DXY_tab)
        self.plotMarked2DXY_pushButton.setGeometry(QtCore.QRect(10, 55, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotMarked2DXY_pushButton.setFont(font)
        self.plotMarked2DXY_pushButton.setObjectName("plotMarked2DXY_pushButton")
        self.plotSelected2DXY_pushButton = QtWidgets.QPushButton(self.plot2DXY_tab)
        self.plotSelected2DXY_pushButton.setGeometry(QtCore.QRect(10, 10, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotSelected2DXY_pushButton.setFont(font)
        self.plotSelected2DXY_pushButton.setObjectName("plotSelected2DXY_pushButton")
        self.Ymin2DXY_textEdit = QtWidgets.QTextEdit(self.plot2DXY_tab)
        self.Ymin2DXY_textEdit.setGeometry(QtCore.QRect(305, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymin2DXY_textEdit.setFont(font)
        self.Ymin2DXY_textEdit.setObjectName("Ymin2DXY_textEdit")
        self.X2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.X2DXY_label.setGeometry(QtCore.QRect(125, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X2DXY_label.setFont(font)
        self.X2DXY_label.setObjectName("X2DXY_label")
        self.Xmin2DXY_textEdit = QtWidgets.QTextEdit(self.plot2DXY_tab)
        self.Xmin2DXY_textEdit.setGeometry(QtCore.QRect(305, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmin2DXY_textEdit.setFont(font)
        self.Xmin2DXY_textEdit.setObjectName("Xmin2DXY_textEdit")
        self.Xmax2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.Xmax2DXY_label.setGeometry(QtCore.QRect(375, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmax2DXY_label.setFont(font)
        self.Xmax2DXY_label.setObjectName("Xmax2DXY_label")
        self.Ymax2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.Ymax2DXY_label.setGeometry(QtCore.QRect(375, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax2DXY_label.setFont(font)
        self.Ymax2DXY_label.setObjectName("Ymax2DXY_label")
        self.Ymax2DXY_textEdit = QtWidgets.QTextEdit(self.plot2DXY_tab)
        self.Ymax2DXY_textEdit.setGeometry(QtCore.QRect(405, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax2DXY_textEdit.setFont(font)
        self.Ymax2DXY_textEdit.setObjectName("Ymax2DXY_textEdit")
        self.Xmin2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.Xmin2DXY_label.setGeometry(QtCore.QRect(275, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmin2DXY_label.setFont(font)
        self.Xmin2DXY_label.setObjectName("Xmin2DXY_label")
        self.Xmax2DXY_textEdit = QtWidgets.QTextEdit(self.plot2DXY_tab)
        self.Xmax2DXY_textEdit.setGeometry(QtCore.QRect(405, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmax2DXY_textEdit.setFont(font)
        self.Xmax2DXY_textEdit.setObjectName("Xmax2DXY_textEdit")
        self.Ymin2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.Ymin2DXY_label.setGeometry(QtCore.QRect(275, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymin2DXY_label.setFont(font)
        self.Ymin2DXY_label.setObjectName("Ymin2DXY_label")
        self.Y2DXY_comboBox = QtWidgets.QComboBox(self.plot2DXY_tab)
        self.Y2DXY_comboBox.setGeometry(QtCore.QRect(145, 40, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y2DXY_comboBox.setFont(font)
        self.Y2DXY_comboBox.setObjectName("Y2DXY_comboBox")
        self.X2DXY_comboBox = QtWidgets.QComboBox(self.plot2DXY_tab)
        self.X2DXY_comboBox.setGeometry(QtCore.QRect(145, 10, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X2DXY_comboBox.setFont(font)
        self.X2DXY_comboBox.setObjectName("X2DXY_comboBox")
        self.Y2DXY_label = QtWidgets.QLabel(self.plot2DXY_tab)
        self.Y2DXY_label.setGeometry(QtCore.QRect(125, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y2DXY_label.setFont(font)
        self.Y2DXY_label.setObjectName("Y2DXY_label")
        self.auto2DXY_pushButton = QtWidgets.QPushButton(self.plot2DXY_tab)
        self.auto2DXY_pushButton.setGeometry(QtCore.QRect(480, 10, 30, 85))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.auto2DXY_pushButton.setFont(font)
        self.auto2DXY_pushButton.setCheckable(False)
        self.auto2DXY_pushButton.setObjectName("auto2DXY_pushButton")
        self.plotting_tabWidget.addTab(self.plot2DXY_tab, "")
        self.plot2DXYZ_tab = QtWidgets.QWidget()
        self.plot2DXYZ_tab.setObjectName("plot2DXYZ_tab")
        self.X2DXYZ_comboBox = QtWidgets.QComboBox(self.plot2DXYZ_tab)
        self.X2DXYZ_comboBox.setGeometry(QtCore.QRect(145, 10, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X2DXYZ_comboBox.setFont(font)
        self.X2DXYZ_comboBox.setObjectName("X2DXYZ_comboBox")
        self.plotMarked_2DXYZ_pushButton = QtWidgets.QPushButton(self.plot2DXYZ_tab)
        self.plotMarked_2DXYZ_pushButton.setGeometry(QtCore.QRect(10, 55, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotMarked_2DXYZ_pushButton.setFont(font)
        self.plotMarked_2DXYZ_pushButton.setObjectName("plotMarked_2DXYZ_pushButton")
        self.plotSelected_2DYXZ_pushButton = QtWidgets.QPushButton(self.plot2DXYZ_tab)
        self.plotSelected_2DYXZ_pushButton.setGeometry(QtCore.QRect(10, 10, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotSelected_2DYXZ_pushButton.setFont(font)
        self.plotSelected_2DYXZ_pushButton.setObjectName("plotSelected_2DYXZ_pushButton")
        self.Y2DXYZ_comboBox = QtWidgets.QComboBox(self.plot2DXYZ_tab)
        self.Y2DXYZ_comboBox.setGeometry(QtCore.QRect(145, 40, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y2DXYZ_comboBox.setFont(font)
        self.Y2DXYZ_comboBox.setObjectName("Y2DXYZ_comboBox")
        self.X2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.X2DXYZ_label.setGeometry(QtCore.QRect(125, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X2DXYZ_label.setFont(font)
        self.X2DXYZ_label.setObjectName("X2DXYZ_label")
        self.Y2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Y2DXYZ_label.setGeometry(QtCore.QRect(125, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y2DXYZ_label.setFont(font)
        self.Y2DXYZ_label.setObjectName("Y2DXYZ_label")
        self.Z2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Z2DXYZ_label.setGeometry(QtCore.QRect(125, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Z2DXYZ_label.setFont(font)
        self.Z2DXYZ_label.setObjectName("Z2DXYZ_label")
        self.Z2DXYZ_comboBox = QtWidgets.QComboBox(self.plot2DXYZ_tab)
        self.Z2DXYZ_comboBox.setGeometry(QtCore.QRect(145, 70, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Z2DXYZ_comboBox.setFont(font)
        self.Z2DXYZ_comboBox.setObjectName("Z2DXYZ_comboBox")
        self.Ymin2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Ymin2DXYZ_label.setGeometry(QtCore.QRect(275, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymin2DXYZ_label.setFont(font)
        self.Ymin2DXYZ_label.setObjectName("Ymin2DXYZ_label")
        self.Xmin2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Xmin2DXYZ_label.setGeometry(QtCore.QRect(275, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmin2DXYZ_label.setFont(font)
        self.Xmin2DXYZ_label.setObjectName("Xmin2DXYZ_label")
        self.Zmin2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Zmin2DXYZ_label.setGeometry(QtCore.QRect(275, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Zmin2DXYZ_label.setFont(font)
        self.Zmin2DXYZ_label.setObjectName("Zmin2DXYZ_label")
        self.Xmin2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Xmin2DXYZ_textEdit.setGeometry(QtCore.QRect(305, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmin2DXYZ_textEdit.setFont(font)
        self.Xmin2DXYZ_textEdit.setObjectName("Xmin2DXYZ_textEdit")
        self.Ymin2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Ymin2DXYZ_textEdit.setGeometry(QtCore.QRect(305, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymin2DXYZ_textEdit.setFont(font)
        self.Ymin2DXYZ_textEdit.setObjectName("Ymin2DXYZ_textEdit")
        self.Zmin2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Zmin2DXYZ_textEdit.setGeometry(QtCore.QRect(305, 70, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Zmin2DXYZ_textEdit.setFont(font)
        self.Zmin2DXYZ_textEdit.setObjectName("Zmin2DXYZ_textEdit")
        self.Ymax2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Ymax2DXYZ_label.setGeometry(QtCore.QRect(375, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax2DXYZ_label.setFont(font)
        self.Ymax2DXYZ_label.setObjectName("Ymax2DXYZ_label")
        self.Xmax2DXYZ_label = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Xmax2DXYZ_label.setGeometry(QtCore.QRect(375, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmax2DXYZ_label.setFont(font)
        self.Xmax2DXYZ_label.setObjectName("Xmax2DXYZ_label")
        self.Ymax2DXYZ_label_2 = QtWidgets.QLabel(self.plot2DXYZ_tab)
        self.Ymax2DXYZ_label_2.setGeometry(QtCore.QRect(375, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax2DXYZ_label_2.setFont(font)
        self.Ymax2DXYZ_label_2.setObjectName("Ymax2DXYZ_label_2")
        self.Ymax2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Ymax2DXYZ_textEdit.setGeometry(QtCore.QRect(405, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax2DXYZ_textEdit.setFont(font)
        self.Ymax2DXYZ_textEdit.setObjectName("Ymax2DXYZ_textEdit")
        self.Xmax2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Xmax2DXYZ_textEdit.setGeometry(QtCore.QRect(405, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmax2DXYZ_textEdit.setFont(font)
        self.Xmax2DXYZ_textEdit.setObjectName("Xmax2DXYZ_textEdit")
        self.Zmax2DXYZ_textEdit = QtWidgets.QTextEdit(self.plot2DXYZ_tab)
        self.Zmax2DXYZ_textEdit.setGeometry(QtCore.QRect(405, 70, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Zmax2DXYZ_textEdit.setFont(font)
        self.Zmax2DXYZ_textEdit.setObjectName("Zmax2DXYZ_textEdit")
        self.auto2DXYZ_pushButton = QtWidgets.QPushButton(self.plot2DXYZ_tab)
        self.auto2DXYZ_pushButton.setGeometry(QtCore.QRect(480, 10, 30, 85))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.auto2DXYZ_pushButton.setFont(font)
        self.auto2DXYZ_pushButton.setCheckable(False)
        self.auto2DXYZ_pushButton.setObjectName("auto2DXYZ_pushButton")
        self.plotting_tabWidget.addTab(self.plot2DXYZ_tab, "")
        self.plot3D_tab = QtWidgets.QWidget()
        self.plot3D_tab.setObjectName("plot3D_tab")
        self.Ymin3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Ymin3D_textEdit.setGeometry(QtCore.QRect(305, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymin3D_textEdit.setFont(font)
        self.Ymin3D_textEdit.setObjectName("Ymin3D_textEdit")
        self.X3D_label = QtWidgets.QLabel(self.plot3D_tab)
        self.X3D_label.setGeometry(QtCore.QRect(125, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X3D_label.setFont(font)
        self.X3D_label.setObjectName("X3D_label")
        self.plotSelected3D_pushButton = QtWidgets.QPushButton(self.plot3D_tab)
        self.plotSelected3D_pushButton.setGeometry(QtCore.QRect(10, 10, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotSelected3D_pushButton.setFont(font)
        self.plotSelected3D_pushButton.setObjectName("plotSelected3D_pushButton")
        self.Z3D_comboBox = QtWidgets.QComboBox(self.plot3D_tab)
        self.Z3D_comboBox.setGeometry(QtCore.QRect(145, 70, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Z3D_comboBox.setFont(font)
        self.Z3D_comboBox.setObjectName("Z3D_comboBox")
        self.Xmin3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Xmin3D_textEdit.setGeometry(QtCore.QRect(305, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmin3D_textEdit.setFont(font)
        self.Xmin3D_textEdit.setObjectName("Xmin3D_textEdit")
        self.Zmax3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Zmax3D_textEdit.setGeometry(QtCore.QRect(405, 70, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Zmax3D_textEdit.setFont(font)
        self.Zmax3D_textEdit.setObjectName("Zmax3D_textEdit")
        self.label_X_11 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_X_11.setGeometry(QtCore.QRect(375, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_X_11.setFont(font)
        self.label_X_11.setObjectName("label_X_11")
        self.label_Y_11 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_Y_11.setGeometry(QtCore.QRect(375, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Y_11.setFont(font)
        self.label_Y_11.setObjectName("label_Y_11")
        self.Ymax3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Ymax3D_textEdit.setGeometry(QtCore.QRect(405, 40, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ymax3D_textEdit.setFont(font)
        self.Ymax3D_textEdit.setObjectName("Ymax3D_textEdit")
        self.label_Z_9 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_Z_9.setGeometry(QtCore.QRect(275, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Z_9.setFont(font)
        self.label_Z_9.setObjectName("label_Z_9")
        self.label_X_12 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_X_12.setGeometry(QtCore.QRect(275, 10, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_X_12.setFont(font)
        self.label_X_12.setObjectName("label_X_12")
        self.Xmax3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Xmax3D_textEdit.setGeometry(QtCore.QRect(405, 10, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Xmax3D_textEdit.setFont(font)
        self.Xmax3D_textEdit.setObjectName("Xmax3D_textEdit")
        self.label_Y_12 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_Y_12.setGeometry(QtCore.QRect(275, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Y_12.setFont(font)
        self.label_Y_12.setObjectName("label_Y_12")
        self.label_Z_10 = QtWidgets.QLabel(self.plot3D_tab)
        self.label_Z_10.setGeometry(QtCore.QRect(375, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_Z_10.setFont(font)
        self.label_Z_10.setObjectName("label_Z_10")
        self.Zmin3D_textEdit = QtWidgets.QTextEdit(self.plot3D_tab)
        self.Zmin3D_textEdit.setGeometry(QtCore.QRect(305, 70, 60, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Zmin3D_textEdit.setFont(font)
        self.Zmin3D_textEdit.setObjectName("Zmin3D_textEdit")
        self.Y3D_comboBox = QtWidgets.QComboBox(self.plot3D_tab)
        self.Y3D_comboBox.setGeometry(QtCore.QRect(145, 40, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y3D_comboBox.setFont(font)
        self.Y3D_comboBox.setObjectName("Y3D_comboBox")
        self.X3D_comboBox = QtWidgets.QComboBox(self.plot3D_tab)
        self.X3D_comboBox.setGeometry(QtCore.QRect(145, 10, 120, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.X3D_comboBox.setFont(font)
        self.X3D_comboBox.setObjectName("X3D_comboBox")
        self.Z3D_label = QtWidgets.QLabel(self.plot3D_tab)
        self.Z3D_label.setGeometry(QtCore.QRect(125, 70, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Z3D_label.setFont(font)
        self.Z3D_label.setObjectName("Z3D_label")
        self.plotMarked3D_pushButton = QtWidgets.QPushButton(self.plot3D_tab)
        self.plotMarked3D_pushButton.setGeometry(QtCore.QRect(10, 55, 100, 40))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.plotMarked3D_pushButton.setFont(font)
        self.plotMarked3D_pushButton.setObjectName("plotMarked3D_pushButton")
        self.Y3D_label = QtWidgets.QLabel(self.plot3D_tab)
        self.Y3D_label.setGeometry(QtCore.QRect(125, 40, 25, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Y3D_label.setFont(font)
        self.Y3D_label.setObjectName("Y3D_label")
        self.auto3D_pushButton = QtWidgets.QPushButton(self.plot3D_tab)
        self.auto3D_pushButton.setGeometry(QtCore.QRect(480, 10, 30, 85))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.auto3D_pushButton.setFont(font)
        self.auto3D_pushButton.setCheckable(False)
        self.auto3D_pushButton.setObjectName("auto3D_pushButton")
        self.plotting_tabWidget.addTab(self.plot3D_tab, "")
        self.left_verticalLayout.addWidget(self.plotting_tabWidget)
        self.preview_listView = QtWidgets.QListView(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.preview_listView.setFont(font)
        self.preview_listView.setObjectName("preview_listView")
        self.left_verticalLayout.addWidget(self.preview_listView)
        self.left_verticalLayout.setStretch(0, 3)
        self.left_verticalLayout.setStretch(1, 6)
        self.left_verticalLayout.setStretch(2, 3)
        self.left_verticalLayout.setStretch(3, 4)
        self.main_horizontalLayout.addLayout(self.left_verticalLayout)
        self.right_verticalLayout = QtWidgets.QVBoxLayout()
        self.right_verticalLayout.setContentsMargins(3, 3, 3, 3)
        self.right_verticalLayout.setSpacing(9)
        self.right_verticalLayout.setObjectName("right_verticalLayout")
        self.right_sub_horizontalLayout = QtWidgets.QHBoxLayout()
        self.right_sub_horizontalLayout.setObjectName("right_sub_horizontalLayout")
        self.filelist_listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.filelist_listWidget.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.filelist_listWidget.setObjectName("filelist_listWidget")
        self.right_sub_horizontalLayout.addWidget(self.filelist_listWidget)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(80, 0))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.clearAll_pushButton = QtWidgets.QPushButton(self.frame)
        self.clearAll_pushButton.clicked.connect(self.clear_all_fileList)
        self.clearAll_pushButton.setGeometry(QtCore.QRect(10, 240, 60, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.clearAll_pushButton.setFont(font)
        self.clearAll_pushButton.setObjectName("clearAll_pushButton")
        self.inverseMark_pushButton = QtWidgets.QPushButton(self.frame)
        self.inverseMark_pushButton.clicked.connect(self.inverse_mark_fileList)
        self.inverseMark_pushButton.setGeometry(QtCore.QRect(10, 80, 60, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.inverseMark_pushButton.setFont(font)
        self.inverseMark_pushButton.setObjectName("inverseMark_pushButton")
        self.clearMarked_pushButton = QtWidgets.QPushButton(self.frame)
        self.clearMarked_pushButton.clicked.connect(self.clear_marked_fileList)
        self.clearMarked_pushButton.setGeometry(QtCore.QRect(10, 200, 60, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.clearMarked_pushButton.setFont(font)
        self.clearMarked_pushButton.setObjectName("clearMarked_pushButton")
        self.clearSelected_pushButton = QtWidgets.QPushButton(self.frame)
        self.clearSelected_pushButton.clicked.connect(self.clear_selected_fileList)
        self.clearSelected_pushButton.setGeometry(QtCore.QRect(10, 160, 60, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.clearSelected_pushButton.setFont(font)
        self.clearSelected_pushButton.setObjectName("clearSelected_pushButton")
        self.mark_label = QtWidgets.QLabel(self.frame)
        self.mark_label.setGeometry(QtCore.QRect(10, 15, 60, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.mark_label.setFont(font)
        self.mark_label.setAlignment(QtCore.Qt.AlignCenter)
        self.mark_label.setObjectName("mark_label")
        self.markAll_pushButton = QtWidgets.QPushButton(self.frame)
        self.markAll_pushButton.clicked.connect(self.mark_all_fileList)
        self.markAll_pushButton.setGeometry(QtCore.QRect(10, 40, 60, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.markAll_pushButton.setFont(font)
        self.markAll_pushButton.setObjectName("markAll_pushButton")
        self.clear_label = QtWidgets.QLabel(self.frame)
        self.clear_label.setGeometry(QtCore.QRect(10, 130, 60, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.clear_label.setFont(font)
        self.clear_label.setAlignment(QtCore.Qt.AlignCenter)
        self.clear_label.setObjectName("clear_label")
        self.right_sub_horizontalLayout.addWidget(self.frame)
        self.right_sub_horizontalLayout.setStretch(0, 10)
        self.right_verticalLayout.addLayout(self.right_sub_horizontalLayout)
        self.terminal_listView = QtWidgets.QListView(self.centralwidget)
        self.terminal_listView.setObjectName("terminal_listView")
        self.right_verticalLayout.addWidget(self.terminal_listView)
        self.right_verticalLayout.setStretch(0, 3)
        self.right_verticalLayout.setStretch(1, 1)
        self.main_horizontalLayout.addLayout(self.right_verticalLayout)
        self.main_horizontalLayout.setStretch(0, 6)
        self.main_horizontalLayout.setStretch(1, 5)
        self.gridLayout.addLayout(self.main_horizontalLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuOperations = QtWidgets.QMenu(self.menubar)
        self.menuOperations.setObjectName("menuOperations")
        self.menu_AddOperation = QtWidgets.QMenu(self.menuOperations)
        self.menu_AddOperation.setObjectName("menu_AddOperation")
        self.menu_AddOperation_filters = QtWidgets.QMenu(self.menu_AddOperation)
        self.menu_AddOperation_filters.setObjectName("menu_AddOperation_filters")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_ImportData = QtWidgets.QAction(MainWindow)
        self.action_ImportData.setObjectName("action_ImportData")
        self.action_Recentfiles = QtWidgets.QAction(MainWindow)
        self.action_Recentfiles.setObjectName("action_Recentfiles")
        self.action_SaveProject = QtWidgets.QAction(MainWindow)
        self.action_SaveProject.setObjectName("action_SaveProject")
        self.action_SaveProjectAs = QtWidgets.QAction(MainWindow)
        self.action_SaveProjectAs.setObjectName("action_SaveProjectAs")
        self.action_Export = QtWidgets.QAction(MainWindow)
        self.action_Export.setObjectName("action_Export")
        self.action_Close = QtWidgets.QAction(MainWindow)
        self.action_Close.setObjectName("action_Close")
        self.action_Exit = QtWidgets.QAction(MainWindow)
        self.action_Exit.setObjectName("action_Exit")
        self.actionassigners = QtWidgets.QAction(MainWindow)
        self.actionassigners.setObjectName("actionassigners")
        self.action_AddOperation_filter_byValue = QtWidgets.QAction(MainWindow)
        self.action_AddOperation_filter_byValue.setObjectName("action_AddOperation_filter_byValue")
        self.menuFile.addAction(self.action_ImportData)
        self.menuFile.addAction(self.action_Recentfiles)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_SaveProject)
        self.menuFile.addAction(self.action_SaveProjectAs)
        self.menuFile.addAction(self.action_Export)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_Close)
        self.menuFile.addAction(self.action_Exit)
        self.menu_AddOperation_filters.addAction(self.action_AddOperation_filter_byValue)
        self.menu_AddOperation.addAction(self.menu_AddOperation_filters.menuAction())
        self.menu_AddOperation.addAction(self.actionassigners)
        self.menuOperations.addAction(self.menu_AddOperation.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuOperations.menuAction())
        self.toolBar.addAction(self.action_ImportData)

        self.retranslateUi(MainWindow)
        self.operations_tabWidget.setCurrentIndex(0)
        self.plotting_tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Creates variable for current project
        self.current_project = {
            "project_name": "",
            "preload": {},
            "variables": [],
            "list_data": []
        }

        # Init function just to test test_project
        self.load_test_project()

    def load_test_project(self):
        project_path = ["D:/Python/AnJ-lyzer/projects/test_project.pkl"]
        with open(project_path[0], 'rb') as file:
            self.current_project = pickle.load(file)

        print(self.current_project['preload'])
        #self.update_import_options()

    def save_test_project(self):
        with open('projects/xxx.pkl', 'wb') as f:
            pickle.dump(self.current_project, f)

    def new_project(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        file_name, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Create New Project", "projects",
                                                   "Project Files (*.pkl);;All Files (*)", options=options)
        if file_name:
            # Get project name from path
            project_name = os.path.splitext(os.path.basename(file_name))[0]
            # Append ".pkl" extension if not already present
            if not file_name.endswith(".pkl"):
                file_name += ".pkl"
            # A dict containing empty project
            self.current_project = {
                "project_name": project_name,
                "project_path": file_name,
                "preload": {
                    "reload_automatically": False,
                    "skip_rows": False,
                    "skip_rows_number": "",
                    "find_header": False,
                    "find_header_phrase": "",
                    "defined_in": False,
                    "defined_in_row": "",
                    "defined_in_column": "",
                    "add_header": False,
                    "add_header_text": "",
                    "decimal_separator": ".",
                    "delimiter": "Tab"
                },
                "list_variables": [],
                "list_data": []
            }
            # Process the selected file_name
            print("New project file created:", file_name)
            # Save data as pickle
            with open(file_name, 'wb') as file:
                pickle.dump(self.current_project, file)
            print("Data saved as pickle.")
            self.update_preload_options()
            self.projectName_lineEdit.setText(self.current_project["project_name"])
            self.projectSize_textBrowser.setText(self.get_size(self.current_project))
            print(self.current_project)

    def save_project(self):
        # gets preload options and updates current project dict
        self.preload_options_to_current_data()
        # Save data as pickle
        with open(self.current_project["project_path"], 'wb') as file:
            pickle.dump(self.current_project, file)
        print("Data saved as pickle.")
        self.update_preload_options()
        self.projectSize_textBrowser.setText(self.get_size(self.current_project))

    def save_project_as(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        file_name, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Project As...", "projects",
                                                             "Project Files (*.pkl);;All Files (*)", options=options)
        if file_name:
            self.preload_options_to_current_data()
            # Append ".pkl" extension if not already present
            if not file_name.endswith(".pkl"):
                file_name += ".pkl"
            # Process the selected file_name
            print("New project file created:", file_name)
            # Save data as pickle
            with open(file_name, 'wb') as file:
                pickle.dump(self.current_project, file)
            print("Data saved as pickle.")
            self.update_preload_options()
            print(self.current_project)

    def open_project(self):
        default_project_path = os.path.join(os.path.dirname(__file__), "projects")
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        file_name, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Open Project", default_project_path, "Project Files (*.pkl)", options=options)
        if file_name:
            # Process the selected file_name
            print("Opening project file:", file_name)

            # Load data from the .pkl file
            with open(file_name, 'rb') as file:
                self.current_project = pickle.load(file)

            # Process the loaded data (e.g., display, analyze, etc.)
            print(f'Data loaded from project: {self.current_project["project_name"]}')
            self.projectSize_textBrowser.setText(self.get_size(self.current_project))
            self.update_preload_options()

    def import_raw_data(self):
        # Open a file dialog to select multiple files
        file_dialog = QtWidgets.QFileDialog()
        file_paths, _ = file_dialog.getOpenFileNames(None, "Select Files", "", "All Files (*)")
        if file_paths:
            if file_paths:
                # Add each file to the list widget
                for file_path in file_paths:
                    item = QtWidgets.QListWidgetItem()
                    item.setText(file_path)
                    item.setFlags(QtCore.Qt.ItemIsUserCheckable | QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsSelectable)
                    item.setCheckState(QtCore.Qt.Unchecked)
                    self.filelist_listWidget.addItem(item)
                    #self.current_project["list_data"].append("{}: {}".format("", ))
                    #self.data_loader(file_path)

    def updata_filelist(self):
        file_paths = self.current_project["list_data"]['path']
        for file_path in file_paths:
            item = QtWidgets.QListWidgetItem()
            item.setText(file_path)
            item.setFlags(QtCore.Qt.ItemIsUserCheckable | QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsSelectable)
            item.setCheckState(QtCore.Qt.Unchecked)
            self.filelist_listWidget.addItem(item)

    def data_loader(self, file_path):
        data = pd.read_csv(f'{file_path}', encoding="ISO-8859-1", skiprows=65, sep='\t')
        # data = pd.read_csv(f'{file_path}', encoding="ISO-8859-1", skiprows=rows_to_skip, sep='\t')[
        #    ['time/s', 'control/V', 'Ewe/V', label_I]] \
        #    .rename(columns={'<I>/mA': 'I/mA'})

        # Change '.' for "," for all columns (if needed):
        for column in data:
            if data[column].dtype == object:
                data[column] = data[column].str.replace(',', '.').astype(float)
        return data
        pass
        # Functions for preloading data import settings

    def load_preload(self):
        file_dialog = QtWidgets.QFileDialog()
        file_dialog.setDirectory('./preload/')
        file_path, _ = file_dialog.getOpenFileNames(None, "Select Preload File", "preload", "All Files (*)")
        with open(file_path[0], 'rb') as file:
            preload = pickle.load(file)
            self.current_project["preload"] = preload
        print(self.current_project['preload'])
        self.update_preload_options()

    def save_preload(self):
        # Gets the preload values from import options window
        preload = {
            "reload_automatically": self.reloadAutomatically_checkBox.isChecked(),
            "skip_rows": self.skipNRows_checkBox.isChecked(),
            "skip_rows_number": self.skipNRows_textEdit.toPlainText(),
            "find_header": self.findHeader_checkBox.isChecked(),
            "find_header_phrase": self.findHeader_textEdit.toPlainText(),
            "defined_in": self.definedIn_checkBox.isChecked(),
            "defined_in_row": self.rowDefinedIn_textEdit.toPlainText(),
            "defined_in_column": self.columnDefinedIn_textEdit.toPlainText(),
            "add_header": self.addHeader_checkBox.isChecked(),
            "add_header_text": self.addHeader_textEdit.toPlainText(),
            "decimal_separator": self.decimalSeparator_textEdit.toPlainText(),
            "delimiter": self.delimiter_comboBox.currentText()
        }
        # Opens window for saving preload
        file_dialog = QtWidgets.QFileDialog()
        file_dialog.setDirectory('./preload/')
        file_path, _ = file_dialog.getSaveFileName(None, "Save Preload", "", "Pickle files (*.pkl)")
        # Check if a file path is selected
        if file_path:
            # Save the dictionary to a file in Pickle format
            with open(file_path, 'wb') as f:
                pickle.dump(preload, f)

    def update_preload_options(self):
        self.reloadAutomatically_checkBox.setChecked(self.current_project["preload"]["reload_automatically"])
        self.skipNRows_checkBox.setChecked(self.current_project["preload"]["skip_rows"])
        self.skipNRows_textEdit.setText(str(self.current_project["preload"]["skip_rows_number"]))
        self.findHeader_checkBox.setChecked(self.current_project["preload"]["find_header"])
        self.findHeader_textEdit.setText(str(self.current_project["preload"]["find_header_phrase"]))
        self.definedIn_checkBox.setChecked(self.current_project["preload"]["defined_in"])
        self.rowDefinedIn_textEdit.setText(str(self.current_project["preload"]["defined_in_row"]))
        self.columnDefinedIn_textEdit.setText(str(self.current_project["preload"]["defined_in_column"]))
        self.addHeader_checkBox.setChecked(self.current_project["preload"]["add_header"])
        self.addHeader_textEdit.setText(str(self.current_project["preload"]["add_header_text"]))
        self.decimalSeparator_textEdit.setText(str(self.current_project["preload"]["decimal_separator"]))
        self.delimiter_comboBox.setCurrentText(str(self.current_project["preload"]["delimiter"]))

    def preload_options_to_current_data(self):
        preload = {
            "reload_automatically": self.reloadAutomatically_checkBox.isChecked(),
            "skip_rows": self.skipNRows_checkBox.isChecked(),
            "skip_rows_number": self.skipNRows_textEdit.toPlainText(),
            "find_header": self.findHeader_checkBox.isChecked(),
            "find_header_phrase": self.findHeader_textEdit.toPlainText(),
            "defined_in": self.definedIn_checkBox.isChecked(),
            "defined_in_row": self.rowDefinedIn_textEdit.toPlainText(),
            "defined_in_column": self.columnDefinedIn_textEdit.toPlainText(),
            "add_header": self.addHeader_checkBox.isChecked(),
            "add_header_text": self.addHeader_textEdit.toPlainText(),
            "decimal_separator": self.decimalSeparator_textEdit.toPlainText(),
            "delimiter": self.delimiter_comboBox.currentText()
        }
        self.current_project["preload"] = preload

    # Functions for Mark buttons (all/none/inverse)designer
    def XXXmarkAll_fileList(self):
        for index in range(self.filelist_listWidget.count()):
            item = self.filelist_listWidget.item(index)
            item.setCheckState(QtCore.Qt.Checked)

    def mark_all_fileList(self):
        all_checked = True
        for index in range(self.filelist_listWidget.count()):
            item = self.filelist_listWidget.item(index)
            if item.checkState() != QtCore.Qt.Checked:
                all_checked = False
                break
        if all_checked:
            for index in range(self.filelist_listWidget.count()):
                item = self.filelist_listWidget.item(index)
                item.setCheckState(QtCore.Qt.Unchecked)
        else:
            for index in range(self.filelist_listWidget.count()):
                item = self.filelist_listWidget.item(index)
                item.setCheckState(QtCore.Qt.Checked)

    def inverse_mark_fileList(self):
        for index in range(self.filelist_listWidget.count()):
            item = self.filelist_listWidget.item(index)
            current_state = item.checkState()
            if current_state == QtCore.Qt.Checked:
                item.setCheckState(QtCore.Qt.Unchecked)
            elif current_state == QtCore.Qt.Unchecked:
                item.setCheckState(QtCore.Qt.Checked)

        # Functions for Clear buttons (selected/marked/all)

    def clear_selected_fileList(self):
        selected_item = self.filelist_listWidget.currentItem()
        if selected_item:
            self.filelist_listWidget.takeItem(self.filelist_listWidget.row(selected_item))

    def clear_marked_fileList(self):
        checked_items = []
        for index in range(self.filelist_listWidget.count()):
            item = self.filelist_listWidget.item(index)
            if item.checkState() == QtCore.Qt.Checked:
                checked_items.append(item)
        for item in checked_items:
            self.filelist_listWidget.takeItem(self.filelist_listWidget.row(item))

    def clear_all_fileList(self):
        self.filelist_listWidget.clear()

    def get_size(self, dict):
        size = len(dict)
        size_bytes = size * 8
        print(f'File size is: {size_bytes} B')
        # Define suffixes for different sizes
        suffixes = ['B', 'kB', 'MB', 'GB', 'TB']
        # Find the appropriate suffix
        suffix_index = 0
        while size_bytes >= 1024 and suffix_index < len(suffixes) - 1:
            size_bytes /= 1024
            suffix_index += 1
        # Return the size with the appropriate suffix
        return "{:.2f} {}".format(size_bytes, suffixes[suffix_index])

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.info_groupBox.setTitle(_translate("MainWindow", "Info"))
        self.saveProject_pushButton.setText(_translate("MainWindow", "Save"))
        self.saveAsProject_pushButton.setText(_translate("MainWindow", "Save As..."))
        self.project_label.setText(_translate("MainWindow", "Project"))
        self.openProject_pushButton.setText(_translate("MainWindow", "Open"))
        self.newProject_pushButton.setText(_translate("MainWindow", "New"))
        self.file_label.setText(_translate("MainWindow", "File"))
        self.loadPreload_pushButton.setText(_translate("MainWindow", "Load preload"))
        self.reloadData_pushButton.setText(_translate("MainWindow", "Reload data"))
        self.savePreload_pushButton.setText(_translate("MainWindow", "Save preload"))
        self.importRawData_pushButton.setText(_translate("MainWindow", "Import raw"))
        self.previewHeader_pushButton.setText(_translate("MainWindow", "Preview"))
        self.rowDefinedIn_file_label.setText(_translate("MainWindow", "Row"))
        self.delimiter_file_label.setText(_translate("MainWindow", "Delimiter"))
        self.addHeader_checkBox.setText(_translate("MainWindow", "add header"))
        self.columnDefinedIn_file_label.setText(_translate("MainWindow", "Column"))
        self.delimiter_comboBox.setItemText(0, _translate("MainWindow", "Tab"))
        self.delimiter_comboBox.setItemText(1, _translate("MainWindow", "Semicolon"))
        self.delimiter_comboBox.setItemText(2, _translate("MainWindow", "Comma"))
        self.delimiter_comboBox.setItemText(3, _translate("MainWindow", "Space"))
        self.delimiter_comboBox.setItemText(4, _translate("MainWindow", "Other..."))
        self.skipNRows_checkBox.setText(_translate("MainWindow", "skip n rows"))
        self.decimalSeparator_file_label.setText(_translate("MainWindow", "Dec. separator"))
        self.findHeader_checkBox.setText(_translate("MainWindow", "find header"))
        self.definedIn_checkBox.setText(_translate("MainWindow", "defined in..."))
        self.decimalSeparator_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">.</p></body></html>"))
        self.reloadAutomatically_checkBox.setText(_translate("MainWindow", "reload automatically"))
        self.removeVariables_pushButton_2.setText(_translate("MainWindow", "Rm"))
        self.variables_file_label.setText(_translate("MainWindow", "Variables"))
        self.OkVariables_pushButton.setText(_translate("MainWindow", "OK"))
        self.operations_tabWidget.setTabText(self.operations_tabWidget.indexOf(self.importOptions_tab), _translate("MainWindow", "Import options"))
        self.addOperation_pushButton.setText(_translate("MainWindow", "ADD ->"))
        self.goSelected_pushButton.setText(_translate("MainWindow", "Go selected!"))
        self.goMarked_pushButton.setText(_translate("MainWindow", "Go marked!"))
        self.operations_tabWidget.setTabText(self.operations_tabWidget.indexOf(self.operations_tab), _translate("MainWindow", "Operations"))
        self.plotMarked2DXY_pushButton.setText(_translate("MainWindow", "Plot marked"))
        self.plotSelected2DXY_pushButton.setText(_translate("MainWindow", "Plot selected"))
        self.X2DXY_label.setText(_translate("MainWindow", "X"))
        self.Xmax2DXY_label.setText(_translate("MainWindow", "max"))
        self.Ymax2DXY_label.setText(_translate("MainWindow", "max"))
        self.Xmin2DXY_label.setText(_translate("MainWindow", "min"))
        self.Ymin2DXY_label.setText(_translate("MainWindow", "min"))
        self.Y2DXY_label.setText(_translate("MainWindow", "Y"))
        self.auto2DXY_pushButton.setText(_translate("MainWindow", "A\n"
"U\n"
"T\n"
"O"))
        self.plotting_tabWidget.setTabText(self.plotting_tabWidget.indexOf(self.plot2DXY_tab), _translate("MainWindow", "Plot 2D XY"))
        self.plotMarked_2DXYZ_pushButton.setText(_translate("MainWindow", "Plot marked"))
        self.plotSelected_2DYXZ_pushButton.setText(_translate("MainWindow", "Plot selected"))
        self.X2DXYZ_label.setText(_translate("MainWindow", "X"))
        self.Y2DXYZ_label.setText(_translate("MainWindow", "Y"))
        self.Z2DXYZ_label.setText(_translate("MainWindow", "Z"))
        self.Ymin2DXYZ_label.setText(_translate("MainWindow", "min"))
        self.Xmin2DXYZ_label.setText(_translate("MainWindow", "min"))
        self.Zmin2DXYZ_label.setText(_translate("MainWindow", "min"))
        self.Ymax2DXYZ_label.setText(_translate("MainWindow", "max"))
        self.Xmax2DXYZ_label.setText(_translate("MainWindow", "max"))
        self.Ymax2DXYZ_label_2.setText(_translate("MainWindow", "max"))
        self.auto2DXYZ_pushButton.setText(_translate("MainWindow", "A\n"
"U\n"
"T\n"
"O"))
        self.plotting_tabWidget.setTabText(self.plotting_tabWidget.indexOf(self.plot2DXYZ_tab), _translate("MainWindow", "Plot 2D XYZ"))
        self.X3D_label.setText(_translate("MainWindow", "X"))
        self.plotSelected3D_pushButton.setText(_translate("MainWindow", "Plot selected"))
        self.label_X_11.setText(_translate("MainWindow", "max"))
        self.label_Y_11.setText(_translate("MainWindow", "max"))
        self.label_Z_9.setText(_translate("MainWindow", "min"))
        self.label_X_12.setText(_translate("MainWindow", "min"))
        self.label_Y_12.setText(_translate("MainWindow", "min"))
        self.label_Z_10.setText(_translate("MainWindow", "max"))
        self.Z3D_label.setText(_translate("MainWindow", "Z"))
        self.plotMarked3D_pushButton.setText(_translate("MainWindow", "Plot marked"))
        self.Y3D_label.setText(_translate("MainWindow", "Y"))
        self.auto3D_pushButton.setText(_translate("MainWindow", "A\n"
"U\n"
"T\n"
"O"))
        self.plotting_tabWidget.setTabText(self.plotting_tabWidget.indexOf(self.plot3D_tab), _translate("MainWindow", "Plot 3D"))
        self.clearAll_pushButton.setText(_translate("MainWindow", "All"))
        self.inverseMark_pushButton.setText(_translate("MainWindow", "I"))
        self.clearMarked_pushButton.setText(_translate("MainWindow", "Marked"))
        self.clearSelected_pushButton.setText(_translate("MainWindow", "Selected"))
        self.mark_label.setText(_translate("MainWindow", "(Un)Mark"))
        self.markAll_pushButton.setText(_translate("MainWindow", "A"))
        self.clear_label.setText(_translate("MainWindow", "Clear"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOperations.setTitle(_translate("MainWindow", "Operations"))
        self.menu_AddOperation.setTitle(_translate("MainWindow", "Add operation"))
        self.menu_AddOperation_filters.setTitle(_translate("MainWindow", "filters"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action_ImportData.setText(_translate("MainWindow", "Import Data"))
        self.action_Recentfiles.setText(_translate("MainWindow", "Recent files"))
        self.action_SaveProject.setText(_translate("MainWindow", "Save project"))
        self.action_SaveProjectAs.setText(_translate("MainWindow", "Save project as..."))
        self.action_Export.setText(_translate("MainWindow", "Export..."))
        self.action_Close.setText(_translate("MainWindow", "Close"))
        self.action_Exit.setText(_translate("MainWindow", "Exit"))
        self.actionassigners.setText(_translate("MainWindow", "assigners"))
        self.action_AddOperation_filter_byValue.setText(_translate("MainWindow", "...by value"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
